{
  "title": "analytics/mobile_apps/android_find_in_page_interaction",
  "description": "Measure user interactions with find-in-page on article screen",
  "$id": "/analytics/mobile_apps/android_find_in_page_interaction/1.0.0",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "$schema",
    "app_install_id",
    "app_session_id",
    "dt",
    "is_anon",
    "meta"
  ],
  "properties": {
    "$schema": {
      "description": "A URI identifying the JSONSchema for this event. This should match an schema's $id in a schema repository. E.g. /schema/title/1.0.0\n",
      "type": "string"
    },
    "app_install_id": {
      "description": "Identifies an install of the app and persists across all sessions. When the user uninstalls the app and re-installs it, a new app install ID is randomly generated.\nThis UUIDv4 identifier is assigned automatically by the EPC library in the the Wikipedia app for Android and iOS.\n",
      "type": "string",
      "maxLength": 36,
      "minLength": 36,
      "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
    },
    "app_session_id": {
      "description": "Identifies an app session: a cluster of actions taken by the user in the app within a limited period of time. A session ID is generated the first time it is requested by the instrumentation code, which will usually be soon after the user launches the app. A new session ID is generated anytime the app has been inactive (that is, in the background state) for at least 15 minutes or has been forcibly stopped by the OS or the user.\nThis identifier is managed and assigned automatically by the EPC library in the Wikipedia app for Android and iOS.\n",
      "type": "string",
      "maxLength": 20,
      "minLength": 20,
      "pattern": "^[0-9a-z]{20}$"
    },
    "dt": {
      "description": "ISO-8601 formatted timestamp of when the event occurred/was generated in UTC). This exists separately from meta.dt in the main common schema. For external client-sent instrumentation events, we want to allow meta.dt to be the received time (filled in by EventGate at ingest time), as we don't trust client-sent events to always set the proper date and time. Client-set event generation time should be set here instead. See: https://phabricator.wikimedia.org/T240460\n",
      "type": "string",
      "format": "date-time",
      "maxLength": 128
    },
    "find_next_clicks_count": {
      "description": "Number of times that the 'Find Next' button was clicked",
      "type": "integer",
      "maximum": 9007199254740991,
      "minimum": -9007199254740991
    },
    "find_prev_clicks_count": {
      "description": "Number of times that the 'Find Previous' button was clicked",
      "type": "integer",
      "maximum": 9007199254740991,
      "minimum": -9007199254740991
    },
    "find_text": {
      "description": "Text that the user typed into the 'Find' box",
      "type": "string"
    },
    "http": {
      "type": "object",
      "properties": {
        "client_ip": {
          "description": "The http client's IP address, usually set from the X-Client-IP header, the value of which is extracted from X-Forwarded-For.",
          "type": "string"
        },
        "has_cookies": {
          "description": "True if the http request has any cookies set",
          "type": "boolean"
        },
        "method": {
          "description": "The HTTP request method (GET, POST, etc.)",
          "type": "string"
        },
        "protocol": {
          "description": "The protocol used for the request (HTTP or HTTPS)",
          "type": "string"
        },
        "request_headers": {
          "description": "Request headers sent by the client.  E.g. user-agent, etc.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "response_headers": {
          "description": "Response headers sent back to the client (when known).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status_code": {
          "description": "The HTTP status code returned for this request (when known)",
          "type": "integer",
          "maximum": 9007199254740991,
          "minimum": -9007199254740991
        }
      }
    },
    "is_anon": {
      "description": "Information about app user: is true if the user is not logged in the app, false if the user is logged in. This is automatically saved as a boolean in the app, and is sent by the app with every event.\n",
      "type": "boolean"
    },
    "meta": {
      "type": "object",
      "required": [
        "dt",
        "stream"
      ],
      "properties": {
        "domain": {
          "description": "Domain the event or entity pertains to",
          "type": "string",
          "minLength": 1
        },
        "dt": {
          "description": "UTC event datetime, in ISO-8601 format",
          "type": "string",
          "format": "date-time",
          "maxLength": 128
        },
        "id": {
          "description": "Unique ID of this event",
          "type": "string"
        },
        "request_id": {
          "description": "Unique ID of the request that caused the event",
          "type": "string"
        },
        "stream": {
          "description": "Name of the stream/queue/dataset that this event belongs in",
          "type": "string",
          "minLength": 1
        },
        "uri": {
          "description": "Unique URI identifying the event or entity",
          "type": "string",
          "format": "uri-reference",
          "maxLength": 8192
        }
      }
    },
    "page_height": {
      "description": "The total height of the page, in device-independent pixels",
      "type": "integer",
      "maximum": 9007199254740991,
      "minimum": -9007199254740991
    },
    "page_id": {
      "description": "Unique identifier for an article in a particular wiki",
      "type": "integer",
      "maximum": 9007199254740991,
      "minimum": -9007199254740991
    },
    "time_spent_ms": {
      "description": "Amount of time, in milliseconds, that the user spent before tapping on the find in page actions. Timer starts when the article gets fully loaded.",
      "type": "integer",
      "maximum": 9007199254740991,
      "minimum": -9007199254740991
    }
  },
  "examples": [
    {
      "$schema": "/analytics/mobile_apps/android_find_in_page_interaction/1.0.0",
      "app_install_id": "00AB59AC-77A1-4484-B49D-A047A036C77B",
      "app_session_id": "dd21852b02db926a1b81",
      "dt": "2020-04-02T19:11:20.942Z",
      "find_next_clicks_count": 2,
      "find_prev_clicks_count": 1,
      "find_text": "earth",
      "is_anon": true,
      "meta": {
        "dt": "2020-04-02T19:11:20.942Z",
        "stream": "android.customize_toolbar_interaction"
      },
      "page_height": 140,
      "page_id": 19021953,
      "time_spent_ms": 60
    }
  ]
}