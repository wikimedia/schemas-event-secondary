{
  "title": "rdf_streaming_updater/reconcile",
  "description": "Event to reconcile a particular entity when a discrepancy is found",
  "$id": "/rdf-streaming-updater/reconcile/1.0.0",
  "$schema": "https://json-schema.org/draft-07/schema#",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "$schema",
    "item",
    "meta",
    "reconciliation_action",
    "reconciliation_source",
    "revision_id"
  ],
  "examples": [
    {
      "$schema": "/rdf-streaming-updater/reconcile/1.0.0",
      "meta": {
        "dt": "2021-11-19T19:02:04Z",
        "domain": "test.wikidata.org",
        "stream": "rdf-streaming-updater.reconcile"
      },
      "dt": "2021-11-19T19:02:04Z",
      "item": "Q123",
      "revision_id": 1238,
      "reconciliation_source": "rdf-spark-tools@eqiad",
      "reconciliation_action": "CREATION",
      "original_event_info": {
        "$schema": "/rdf-streaming-updater/reconcile/1.0.0",
        "meta": {
          "dt": "2021-11-17T17:02:04Z",
          "domain": "test.wikidata.org",
          "stream": "mediawiki.revision-create"
        }
      }
    }
  ],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "A URI identifying the JSONSchema for this event. This should match an schema's $id in a schema repository. E.g. /schema/title/1.0.0\n"
    },
    "meta": {
      "type": "object",
      "required": [
        "dt",
        "stream"
      ],
      "properties": {
        "uri": {
          "type": "string",
          "format": "uri-reference",
          "maxLength": 8192,
          "description": "Unique URI identifying the event or entity"
        },
        "request_id": {
          "type": "string",
          "description": "Unique ID of the request that caused the event"
        },
        "id": {
          "type": "string",
          "description": "Unique ID of this event"
        },
        "dt": {
          "type": "string",
          "format": "date-time",
          "maxLength": 128,
          "description": "UTC event datetime, in ISO-8601 format"
        },
        "domain": {
          "type": "string",
          "description": "Domain the event or entity pertains to",
          "minLength": 1
        },
        "stream": {
          "type": "string",
          "description": "Name of the stream/queue/dataset that this event belongs in",
          "minLength": 1
        }
      }
    },
    "dt": {
      "type": "string",
      "format": "date-time",
      "maxLength": 128,
      "description": "(should be part of /fragment/common) time at which this event is produced (processing time of the flink pipeline)"
    },
    "item": {
      "type": "string",
      "description": "Wikibase entity ID to reconcile"
    },
    "revision_id": {
      "type": "integer",
      "description": "The (database) revision ID that needs to be reconciled",
      "minimum": 0,
      "maximum": 9007199254740991
    },
    "reconciliation_source": {
      "type": "string",
      "description": "The source of the reconciliation."
    },
    "reconciliation_action": {
      "type": "string",
      "description": "the kind of reconciliation to perform",
      "enum": [
        "CREATION",
        "DELETION"
      ]
    },
    "original_event_info": {
      "type": "object",
      "description": "Some original event data that triggered this side output event",
      "required": [
        "$schema",
        "meta"
      ],
      "properties": {
        "dt": {
          "type": "string",
          "format": "date-time",
          "maxLength": 128,
          "description": "(should be part of /fragment/common) original event time"
        },
        "$schema": {
          "type": "string",
          "description": "A URI identifying the JSONSchema for this event. This should match an schema's $id in a schema repository. E.g. /schema/title/1.0.0\n"
        },
        "meta": {
          "type": "object",
          "required": [
            "dt",
            "stream"
          ],
          "properties": {
            "uri": {
              "type": "string",
              "format": "uri-reference",
              "maxLength": 8192,
              "description": "Unique URI identifying the event or entity"
            },
            "request_id": {
              "type": "string",
              "description": "Unique ID of the request that caused the event"
            },
            "id": {
              "type": "string",
              "description": "Unique ID of this event"
            },
            "dt": {
              "type": "string",
              "format": "date-time",
              "maxLength": 128,
              "description": "UTC event datetime, in ISO-8601 format"
            },
            "domain": {
              "type": "string",
              "description": "Domain the event or entity pertains to",
              "minLength": 1
            },
            "stream": {
              "type": "string",
              "description": "Name of the stream/queue/dataset that this event belongs in",
              "minLength": 1
            }
          }
        }
      }
    }
  }
}