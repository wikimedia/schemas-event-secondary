title: analytics/mediawiki/talk_page_edit
description: >
  Tracks published edits on all talk page namespaces including new topics,
  comments, and responses made using either standard page editing methods or the
  Reply Tool and New Discussion Tool.
$id: /analytics/mediawiki/talk_page_edit/1.1.0
$schema: 'https://json-schema.org/draft-07/schema#'
type: object
additionalProperties: false
required:
  - $schema
  - action
  - comment_id
  - comment_parent_id
  - component_type
  - database
  - integration
  - meta
  - page_id
  - page_namespace
  - performer
  - revision_id
  - session_id
  - topic_id
properties:
  $schema:
    description: >
      A URI identifying the JSONSchema for this event. This should match an
      schema's $id in a schema repository. E.g. /schema/title/1.0.0
    type: string
  action:
    description: >
      List of possible actions.

      Publish: User makes an edit to save a comment, reply or new topic on a
      talk page.

      Note: Only edits to publish new topics, comments and responses are
      tracked. Edits to existing comments are not tracked.
    type: string
    enum:
      - publish
  comment_id:
    description: |
      Unique identifier of the comment that the user just posted.
      Comment IDs look like: c-Matma_Rex-2020-12-16T21:35:00.000Z-hi!
    type: string
  comment_parent_id:
    description: >
      Unique identifier of the comment that the user is responding to. If this
      is a top-level comment this will be the identifier of the heading.

      Comment IDs look like: c-Matma_Rex-2020-12-16T21:35:00.000Z-hi!
    type: string
  component_type:
    type: string
    enum:
      - comment
      - response
      - topic
  database:
    description: The name of the wiki database this event entity belongs to.
    type: string
    minLength: 1
  dt:
    description: >
      ISO-8601 formatted timestamp of when the event occurred/was generated in
      UTC). This exists separately from meta.dt in the main common schema. For
      external client-sent instrumentation events, we want to allow meta.dt to
      be the received time (filled in by EventGate at ingest time), as we don't
      trust client-sent events to always set the proper date and time.
      Client-set event generation time should be set here instead. See:
      https://phabricator.wikimedia.org/T240460
    type: string
    format: date-time
    maxLength: 128
  http:
    type: object
    properties:
      has_cookies:
        description: True if the http request has any cookies set
        type: boolean
      method:
        description: 'The HTTP request method (GET, POST, etc.)'
        type: string
      protocol:
        description: The protocol used for the request (HTTP or HTTPS)
        type: string
      request_headers:
        description: 'Request headers sent by the client.  E.g. user-agent, etc.'
        type: object
        additionalProperties:
          type: string
      response_headers:
        description: Response headers sent back to the client (when known).
        type: object
        additionalProperties:
          type: string
      status_code:
        description: The HTTP status code returned for this request (when known)
        type: integer
        maximum: 9007199254740991
        minimum: -9007199254740991
  integration:
    description: >-
      The editor integration through which the user is attempting to edit the
      page.
    type: string
    enum:
      - page
      - flow
      - lqt
      - app
      - discussiontools
      - contenttranslation
  meta:
    type: object
    required:
      - dt
      - stream
    properties:
      domain:
        description: Domain the event or entity pertains to
        type: string
        minLength: 1
      dt:
        description: 'UTC event datetime, in ISO-8601 format'
        type: string
        format: date-time
        maxLength: 128
      id:
        description: Unique ID of this event
        type: string
      request_id:
        description: Unique ID of the request that caused the event
        type: string
      stream:
        description: Name of the stream/queue/dataset that this event belongs in
        type: string
        minLength: 1
      uri:
        description: Unique URI identifying the event or entity
        type: string
        format: uri-reference
        maxLength: 8192
  page_id:
    description: The (database) page ID.
    type: integer
    maximum: 9007199254740991
    minimum: 0
  page_is_redirect:
    description: >
      True if this page is currently a redirect page.  This fact is ultimately
      represented by revision content containing redirect wikitext.  If rev_id's
      content has redirect wikitext, then this page is a redirect.  Note that
      this state is also stored on the Mediawiki page table.
    type: boolean
  page_namespace:
    description: The namespace ID this page belongs to.
    type: integer
    maximum: 9007199254740991
    minimum: -9007199254740991
  page_title:
    description: The normalized title of the page.
    type: string
    minLength: 1
  performer:
    description: Represents the user that performed this change.
    type: object
    properties:
      user_edit_count:
        description: >
          The number of edits this user has made at the time of this event. Not
          present for anonymous users.
        type: integer
        maximum: 9007199254740991
        minimum: 0
      user_edit_count_bucket:
        description: >
          A bucketed version of `user_edit_count`. Unlike that field, this one
          can be retained in the sanitized version, since it provides less
          information that could be used to reidentify the user. Not applicable
          to anonymous users.

          The values are the ones returned by EventLogging's
          `getUserEditCountBucket` function, which can be used to populate this
          field. A N/A value exists for cases where we can't meaningfully tell
          how many edits may have been made by the user.
        type: string
        enum:
          - 0 edits
          - 1-4 edits
          - 5-99 edits
          - 100-999 edits
          - 1000+ edits
          - N/A
      user_groups:
        description: 'A list of the groups this user belongs to.  E.g. bot, sysop etc.'
        type: array
        items:
          type: string
          minLength: 1
      user_id:
        description: >
          The user id that performed this change.  This is optional, and will
          not be present for anonymous users.
        type: integer
        maximum: 9007199254740991
        minimum: -9007199254740991
      user_is_anonymous:
        description: |
          Whether the user is an anonymous (unregistered) user.
        type: boolean
      user_is_bot:
        description: >
          True if this user is considered to be a bot at the time of this event.
          This is checked via the $user->isBot() method, which considers both
          user_groups and user permissions.
        type: boolean
      user_registration_dt:
        description: >
          The datetime of the user account registration. Not present for
          anonymous users or if missing in the MW database.
        type: string
        format: date-time
        maxLength: 128
      user_text:
        description: The text representation of the user that performed this change.
        type: string
        minLength: 1
  rev_id:
    description: The head revision of the page at the time of this event.
    type: integer
    maximum: 9007199254740991
    minimum: 0
  revision_id:
    description: The MediaWiki ID of the revision that has just been published.
    type: integer
    maximum: 9007199254740991
    maxiumum: 9007199254740991
    minimum: 0
  session_id:
    description: >-
      A string of alphanumeric characters, unique to the current page view
      session; used for grouping events.
    type: string
  topic_id:
    description: >
      Unique identifier of the new topic that the user is commenting or
      responding to.

      Header IDs look like: "h-hi!-2020-12-16T21:35:00.000Z
    type: string
examples:
  - $schema: /analytics/mediawiki/talk_page_edit/1.1.0
    action: publish
    comment_id: 'c-Matma_Rex-2020-12-16T21:35:00.000Z-hi!'
    comment_parent_id: 'c-Admin-2021-10-18T07:08:00.000Z-Admin-2021-10-18T06:48:00.000Z'
    component_type: response
    database: cawiki
    integration: page
    meta:
      dt: '2021-10-18T07:08:00.000Z'
      stream: mediawiki.talk_page_edit
    page_id: 4
    page_namespace: 1
    performer:
      user_edit_count: 914
      user_edit_count_bucket: 100-999 edits
      user_id: 1
      user_is_anonymous: false
    revision_id: 122
    session_id: b06ca8559d68e1e5a74a
    topic_id: 'h-hi!-2020-12-16T21:35:00.000Z'
